[{"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\index.js":"1","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\reportWebVitals.js":"2","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\App.js":"3","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\Nav.js":"4","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\globalStyle.js":"5","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\GlobalStyle.js":"6","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\setStore.js":"7","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\reducer.js":"8","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\NewTodoButton.js":"9","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\ItemTodo.js":"10","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\NewListButton.js":"11","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\ItemList.js":"12","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\ListInitialState.js":"13","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\AllItemList.js":"14","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\AllItemTodo.js":"15","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\entities.js":"16","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\rtodos.js":"17","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\rlists.js":"18"},{"size":618,"mtime":1610335411030,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1610314340057,"results":"21","hashOfConfig":"20"},{"size":1260,"mtime":1610930492398,"results":"22","hashOfConfig":"20"},{"size":3591,"mtime":1611002798626,"results":"23","hashOfConfig":"20"},{"size":710,"mtime":1609986002211,"results":"24","hashOfConfig":"20"},{"size":718,"mtime":1609997478121,"results":"25","hashOfConfig":"20"},{"size":749,"mtime":1610398886243,"results":"26","hashOfConfig":"20"},{"size":156,"mtime":1610519332429,"results":"27","hashOfConfig":"20"},{"size":2001,"mtime":1610931058386,"results":"28","hashOfConfig":"20"},{"size":2447,"mtime":1611002652650,"results":"29","hashOfConfig":"20"},{"size":1974,"mtime":1610930664532,"results":"30","hashOfConfig":"20"},{"size":3791,"mtime":1611002659310,"results":"31","hashOfConfig":"20"},{"size":1385,"mtime":1610847238501,"results":"32","hashOfConfig":"20"},{"size":805,"mtime":1610930585460,"results":"33","hashOfConfig":"20"},{"size":1598,"mtime":1611001657368,"results":"34","hashOfConfig":"20"},{"size":205,"mtime":1610674450319,"results":"35","hashOfConfig":"20"},{"size":5094,"mtime":1610999577339,"results":"36","hashOfConfig":"20"},{"size":3144,"mtime":1610937358707,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pz0p4k",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\index.js",[],["83","84"],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\reportWebVitals.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\App.js",["85","86"],"import GlobalStyle from \"./components/GlobalStyle\";\nimport AllItemList from \"./components/AllItemList\";\nimport AllItemTodo from \"./components/AllItemTodo\";\nimport ItemList from \"./components/ItemList\";\n\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { current } from \"@reduxjs/toolkit\";\n\nfunction App() {\n  const lists = useSelector((state) => state.entities.lists);\n  // const todos = useSelector((state) => state.entities.todos);\n  const [currentList, setCurrentList] = useState(lists[0]);\n  const [currentLists, setCurrentLists] = useState(lists);\n  // const [currentTodos, setCurrentTodos] = useState(todos);\n  // const getPropsFromChild = (listId) => {\n  //   console.log(\"listId in parent: \" + listId);\n  // };\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <AllItemList\n        currentList={currentList}\n        setCurrentList={setCurrentList}\n        setCurrentLists={setCurrentLists}\n      />\n      {/* <ItemList passPropsToParent={(listId) => getPropsFromChild(listId)} /> */}\n      <AllItemTodo\n        currentList={currentList}\n        setCurrentList={setCurrentList}\n        currentLists={currentLists}\n        setCurrentLists={setCurrentLists}\n      />\n    </div>\n  );\n}\nexport default App;\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\Nav.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\globalStyle.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\GlobalStyle.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\setStore.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\reducer.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\NewTodoButton.js",["87"],"import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { todoAdded } from \"../store/rtodos\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst NewTodoButton = ({ currentList }) => {\r\n  const dispatch = useDispatch();\r\n  const newTodo = (e) => {\r\n    e.preventDefault();\r\n    const id = uuidv4();\r\n    // GET STATE o day,\r\n    // dispatch(todoAdded):\r\n    dispatch(\r\n      todoAdded({ listId: currentList.id, id, content: \"\", check: true })\r\n    );\r\n    // useSelector de lay todos moi vua dispatched xong\r\n    // const todos = useSelector((state) => state.todos);\r\n    // dispatch(todosAssigned(todos) vo lists\r\n    // dispatch(todosAssigned(todos));\r\n  };\r\n  return (\r\n    <div>\r\n      <button className=\"button-new\" onClick={newTodo}>\r\n        New\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NavBar = styled(motion.div)`\r\n  /* flex-direction: column; */\r\n  /* justify-content: space-between; */\r\n  /* padding: 2rem; */\r\n  text-align: center;\r\n  padding: 2rem 5rem;\r\n  h2 {\r\n    padding: 2rem 0rem;\r\n  }\r\n  button {\r\n    border: none;\r\n    cursor: pointer;\r\n    /* border-radius: 0.5rem; */\r\n    border-color: #ff7676;\r\n    font-size: 1.5rem;\r\n    padding: 0.5rem 2rem;\r\n    background: white;\r\n    box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.1);\r\n    z-index: 1;\r\n\r\n    color: #ff7676;\r\n    :hover {\r\n      background: #ff7676;\r\n      border: none;\r\n      color: white;\r\n    }\r\n    :active {\r\n      /* outline: none; */\r\n      background: #cf2929;\r\n      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\r\n      transition: ease-out 0.3s;\r\n    }\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  input {\r\n    border: none;\r\n    font-size: 1.5rem;\r\n    padding: 0.5rem 2rem;\r\n    background: white;\r\n    box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.1);\r\n    z-index: 3;\r\n    :focus {\r\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\r\n\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\nexport default NewTodoButton;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\ItemTodo.js",["88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { todoAdded } from \"../store/rtodos\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { todoRemoved, todoChecked, todoEdited } from \"../store/rtodos\";\r\n\r\nconst ItemTodo = ({ id, content, check }) => {\r\n  const dispatch = useDispatch();\r\n  const [contentX, setContentX] = useState(content);\r\n\r\n  const inputTodo = (e) => {\r\n    setContentX(e.target.value);\r\n  };\r\n  const clickNew = (e) => {\r\n    e.preventDefault();\r\n    const id = uuidv4();\r\n    dispatch(todoAdded({ id, content: contentX, check: true }));\r\n  };\r\n\r\n  const todoEditing = (e) => {\r\n    e.preventDefault();\r\n    dispatch(todoEdited({ id, content: contentX }));\r\n  };\r\n\r\n  const todoChecking = () => {\r\n    dispatch(todoChecked({ id, check }));\r\n  };\r\n\r\n  const todoRemoving = () => {\r\n    dispatch(todoRemoved({ id }));\r\n  };\r\n  return (\r\n    <StyledItem>\r\n      {/* <h3 onClick={editClick}>{contentX}</h3> */}\r\n      <StyledIcons>\r\n        <form className=\"nav-submit\">\r\n          <input\r\n            type=\"text\"\r\n            onClick={inputTodo}\r\n            onChange={inputTodo}\r\n            value={contentX}\r\n            onBlur={todoEditing}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-submit\"\r\n            onClick={todoEditing}\r\n          ></button>\r\n        </form>\r\n\r\n        {check === true ? (\r\n          <button onClick={todoChecking}>unchecked</button>\r\n        ) : (\r\n          <button onClick={todoChecking}>checked</button>\r\n        )}\r\n\r\n        <button onClick={todoRemoving}>remove</button>\r\n      </StyledIcons>\r\n    </StyledItem>\r\n  );\r\n};\r\n\r\nconst StyledItem = styled(motion.div)`\r\n  width: 60%;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  h3 {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst StyledIcons = styled(motion.div)`\r\n  display: flex;\r\n  button {\r\n    border: none;\r\n    cursor: pointer;\r\n    /* border-radius: 0.5rem; */\r\n    background: #ff7676;\r\n    padding: 0rem 1rem;\r\n    font-size: 1rem;\r\n    color: white;\r\n    :hover {\r\n      background: #ff7676;\r\n      border: none;\r\n      color: white;\r\n    }\r\n    :active {\r\n      /* outline: none; */\r\n      background: #cf2929;\r\n      transition: ease-out 0.3s;\r\n    }\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\nexport default ItemTodo;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\NewListButton.js",["90","91","92"],"import {\r\n  listAdded,\r\n  currentListStatusSet,\r\n  todosAssigned,\r\n} from \"../store/rlists\";\r\nimport { todoAdded } from \"../store/rtodos\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState } from \"react\";\r\nimport setStore from \"../store/setStore\";\r\n\r\nconst NewListButton = ({ setCurrentList, setCurrentLists }) => {\r\n  const dispatch = useDispatch();\r\n  const [titleX, setTitleX] = useState(\"\");\r\n  const [openInput, setOpenInput] = useState(false);\r\n  const id = uuidv4();\r\n\r\n  const openInputField = (e) => {\r\n    setOpenInput(!openInput);\r\n    if (openInput === false) {\r\n      setTitleX(\"\");\r\n    }\r\n  };\r\n  const getListTitle = (e) => {\r\n    setTitleX(e.target.value);\r\n  };\r\n  const setNewList = (e) => {\r\n    e.preventDefault();\r\n    if (titleX === \"\") {\r\n      setTitleX(\"\");\r\n    } else {\r\n      dispatch(\r\n        listAdded({ id, title: titleX, status: true })\r\n        // listAdded({\r\n        //   listInfo: { id, title: titleX },\r\n        //   todos: [],\r\n        // })\r\n      );\r\n      dispatch(currentListStatusSet({ id, status: true }));\r\n      const lists = setStore.getState().entities.lists;\r\n      const lastIndex = lists.length - 1;\r\n      setCurrentList(lists[lastIndex]);\r\n      setCurrentLists(lists);\r\n      setTitleX(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"nav-list\">\r\n        <h2>select a list</h2>\r\n        {openInput ? (\r\n          <form onSubmit={setNewList}>\r\n            <input\r\n              type=\"text\"\r\n              value={titleX}\r\n              onChange={getListTitle}\r\n              onBlur={setNewList}\r\n            />\r\n          </form>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button-newlist\"\r\n          onClick={openInputField}\r\n        >\r\n          New List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewListButton;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\ItemList.js",["93","94"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listTitleEdited,\r\n  listRemoved,\r\n  currentListStatusSet,\r\n} from \"../store/rlists\";\r\nimport { todosThisListRemoved } from \"../store/rtodos\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport setStore from \"../store/setStore\";\r\n\r\nconst ItemList = ({ setCurrentList, currentList, list, id, title, status }) => {\r\n  const dispatch = useDispatch();\r\n  const lists = setStore.getState().entities.lists;\r\n\r\n  const [titleX, setTitleX] = useState(title);\r\n  const [onEdit, setOnEdit] = useState(false);\r\n\r\n  // const listId = id;\r\n  // useEffect(() => {\r\n  //   console.log(id, title);\r\n  //   console.log(\"values in child: \" + listId);\r\n  //   props.passPropsToParent(listId);\r\n  // }, []);\r\n\r\n  const listRemoving = () => {\r\n    if (status === true && lists.indexOf(list) !== 0) {\r\n      // const lists = setStore.getState().entities.lists;\r\n      const newIndex = lists.indexOf(list) - 1;\r\n      setCurrentList(lists[newIndex]);\r\n      dispatch(currentListStatusSet({ id: lists[newIndex].id, status: true }));\r\n      dispatch(listRemoved({ id }));\r\n      dispatch(todosThisListRemoved({ id }));\r\n    } else {\r\n      dispatch(listRemoved({ id }));\r\n      dispatch(todosThisListRemoved({ id }));\r\n    }\r\n    // const todos = setStore.getState().entities.todos;\r\n    // const todosThisList = todos.filter((todo) => todo.listId !== id);\r\n    // todosThisList.length = 0;\r\n    // PHAI REMOVE LITS'S TODOS LUON\r\n\r\n    // const lists = setStore.getState().entities.lists;\r\n    // if (lists.indexOf(currentList) === lists.length - 1) {\r\n    //   dispatch(listRemoved({ id }));\r\n    //   lists = setStore.getState().entities.lists;\r\n    //   dispatch(\r\n    //     currentListStatusSet({ id: lists[lists.length - 1].id, status: true })\r\n    //   );\r\n    // } else {\r\n    //   dispatch(listRemoved({ id }));\r\n    //    lists = setStore.getState().entities.lists;\r\n    //    dispatch(\r\n    //     currentListStatusSet({ id: lists[lists.length - 1].id, status: true })\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  const titleInput = (e) => {\r\n    e.preventDefault();\r\n    setTitleX(e.target.value);\r\n  };\r\n\r\n  const listTitleOpenEditing = (e) => {\r\n    e.preventDefault();\r\n    setOnEdit(true);\r\n  };\r\n\r\n  const listTitleEditing = (e) => {\r\n    e.preventDefault();\r\n    dispatch(listTitleEdited({ id, title: titleX }));\r\n    setOnEdit(false);\r\n  };\r\n\r\n  const clickCurrentList = () => {\r\n    setCurrentList(list);\r\n    dispatch(currentListStatusSet({ id, status: true }));\r\n\r\n    // console.log(currentList);\r\n    // console.log(AllItemTodo);\r\n    // store.subscribe(() => {\r\n    //   const state = store.getState();\r\n    //   console.log(state.lists[index].todos);\r\n    // });\r\n    // dispatch(todosAssigned(todos));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"list-item\" onClick={clickCurrentList}>\r\n        <div>\r\n          {onEdit ? (\r\n            <form onSubmit={listTitleEditing}>\r\n              <input\r\n                type=\"text\"\r\n                // onClick={titleInput}\r\n                onChange={titleInput}\r\n                value={titleX}\r\n                onBlur={listTitleEditing}\r\n              />\r\n              <button onSubmit={listTitleEditing}>submit</button>\r\n            </form>\r\n          ) : (\r\n            <form>\r\n              <h2>{title}</h2>\r\n              <button className=\"list-edit\" onClick={listTitleOpenEditing}>\r\n                edit name\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button className=\"list-remove\" onClick={listRemoving}>\r\n          remove list\r\n        </button>\r\n      </div>\r\n      {/* <div className=\"todo-items\">\r\n        <AllItemTodo />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default ItemList;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\ListInitialState.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\AllItemList.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\components\\AllItemTodo.js",["95","96","97"],"import { useSelector } from \"react-redux\";\r\nimport ItemTodo from \"./ItemTodo\";\r\nimport ItemList from \"./ItemList\";\r\nimport NewTodoButton from \"../components/NewTodoButton\";\r\nimport Nav from \"./Nav\";\r\nimport { listAdded } from \"../store/rlists\";\r\nimport setStore from \"../store/setStore\";\r\nconst AllItemTodo = ({\r\n  currentList,\r\n  setCurrentList,\r\n  setCurrentLists,\r\n  currentLists,\r\n}) => {\r\n  // const lists = useSelector((state) => state.entities.lists);\r\n  const lists = setStore.getState().entities.lists;\r\n  const todos = useSelector((state) => state.entities.todos);\r\n  // const index = lists.findIndex((list) => list.id === id);\r\n  // const todosIndex = lists[index].todos;\r\n  const listsActive = currentLists.filter((list) => list.status === true);\r\n  const currentTodos = todos.filter((todo) => todo.listId === currentList.id);\r\n\r\n  return (\r\n    <div className=\"all-item-todo\">\r\n      <Nav currentList={currentList} setCurrentLists={setCurrentLists} />\r\n      <NewTodoButton\r\n        currentList={currentList}\r\n        setCurrentList={setCurrentList}\r\n      />\r\n      {listsActive.length === 1\r\n        ? currentTodos.map((item) => (\r\n            <ItemTodo\r\n              key={item.id}\r\n              id={item.id}\r\n              content={item.content}\r\n              check={item.check}\r\n            />\r\n          ))\r\n        : todos.map((todo) => (\r\n            <ItemTodo\r\n              key={todo.id}\r\n              id={todo.id}\r\n              content={todo.content}\r\n              check={todo.check}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllItemTodo;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\entities.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\rtodos.js",["98"],"// // Actions OLD\r\n// export const loadTodo = (id, content, check) => (dispatch) => {\r\n//   // const loadData = todoItem(id);\r\n//   dispatch({\r\n//     type: \"TODO_ADDED\",\r\n//     payload: {\r\n//       id,\r\n//       content,\r\n//       check,\r\n//     },\r\n//   });\r\n// };\r\n\r\n// export const checkTodo = (id, check) => (dispatch) => {\r\n//   dispatch({\r\n//     type: \"TODO_CHECKED\",\r\n//     payload: { id, check },\r\n//   });\r\n// };\r\n\r\n// export const removeTodo = (id) => (dispatch) => {\r\n//   dispatch({\r\n//     type: \"TODO_REMOVED\",\r\n//     payload: { id },\r\n//   });\r\n// };\r\n\r\n// Reducer OLD\r\n// const reducer = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case \"TODO_ADDED\":\r\n//       return [\r\n//         ...state,\r\n//         {\r\n//           id: action.payload.id,\r\n//           content: action.payload.content,\r\n//           check: action.payload.check,\r\n//         },\r\n//       ];\r\n//     case \"TODO_CHECKED\":\r\n//       return state.map((todo) =>\r\n//         todo.id !== action.payload.id\r\n//           ? todo\r\n//           : { ...todo, check: !action.payload.check }\r\n//       );\r\n\r\n//     case \"TODO_REMOVED\":\r\n//       return state.filter((todo) => todo.id !== action.payload.id);\r\n//     default:\r\n//       return [...state];\r\n//   }\r\n// };\r\n\r\n// Reducer NEW\r\n// const reducer = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case todoAdded.type:\r\n//       return [\r\n//         ...state,\r\n//         {\r\n//           id: action.payload.id,\r\n//           content: action.payload.content,\r\n//           check: action.payload.check,\r\n//         },\r\n//       ];\r\n//     case todoChecked.type:\r\n//       return state.map((todo) =>\r\n//         todo.id !== action.payload.id\r\n//           ? todo\r\n//           : { ...todo, check: !action.payload.check }\r\n//       );\r\n\r\n//     case todoRemoved.type:\r\n//       return state.filter((todo) => todo.id !== action.payload.id);\r\n//     default:\r\n//       return [...state];\r\n//   }\r\n// };\r\n\r\n// // Actions NEW\r\n// export const todoAdded = createAction(\"todoAdded\");\r\n// export const todoChecked = createAction(\"todoChecked\");\r\n// export const todoRemoved = createAction(\"todoRemoved\");\r\n// // Reducer NEWER with createReducer\r\n// const reducer = createReducer([], {\r\n//   todoAdded: (state, action) => {\r\n//     // ^^^ Option 1: Let the variable todoAdded here\r\n//     state.push({\r\n//       id: action.payload.id,\r\n//       content: action.payload.content,\r\n//       check: action.payload.check,\r\n//     });\r\n//   },\r\n//   [todoChecked.type]: (state, action) => {\r\n//     // ^^^ Option2: with: type = 'todoChecked' here because todoChecked is an object// if action todoChecked has 'todoXXXed', then type = 'todoXXXed'\r\n//     state.map((todo) =>\r\n//       todo.id !== action.payload.id\r\n//         ? todo\r\n//         : { ...todo, check: !action.payload.check }\r\n//     );\r\n//   },\r\n//   todoAdded: (state, action) => {\r\n//     state.filter((todo) => todo.id !== action.payload.id);\r\n//   },\r\n// });\r\n// export default reducer;\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { iniTodos } from \"../store/ListInitialState\";\r\nimport { todosAssigned } from \"./rlists\";\r\n\r\nconst slice = createSlice({\r\n  name: \"todos\",\r\n  initialState: iniTodos,\r\n  reducers: {\r\n    todoAdded: (todos, action) => {\r\n      todos.push({\r\n        listId: action.payload.listId,\r\n        id: action.payload.id,\r\n        content: action.payload.content,\r\n        check: action.payload.check,\r\n      });\r\n    },\r\n    todoEdited: (todos, action) => {\r\n      const index = todos.findIndex((todo) => todo.id === action.payload.id);\r\n      todos[index].content = action.payload.content;\r\n    },\r\n    todoChecked: (todos, action) => {\r\n      const index = todos.findIndex((todo) => todo.id === action.payload.id);\r\n      todos[index].check = !action.payload.check;\r\n    },\r\n    todoRemoved: (todos, action) => {\r\n      const index = todos.findIndex((todo) => todo.id === action.payload.id);\r\n      todos.splice(index, 1);\r\n    },\r\n    todosThisListRemoved: (todos, action) => {\r\n      return todos.filter((todo) => todo.listId !== action.payload.id);\r\n\r\n      // for (let i = todos.length - 1; i > -1; i--) {\r\n      //   if (todos[i].listId === action.payload.id) {\r\n      //     todos.splice(i, 1);\r\n      //   }\r\n      // }\r\n\r\n      // todos.forEach((todo) => {\r\n      //   if (todo.listId === action.payload.id) {\r\n      //     const index = todos.findIndex(todo);\r\n      //     todos.splice(index, 1);\r\n      //   }\r\n      // });\r\n\r\n      // let newTodos = todos.filter((todo) => todo.listId !== action.payload.id);\r\n      // console.log(newTodos);\r\n\r\n      //   // const todosThisList =\r\n      //   // todosThisList.splice(0, todosThisList.length);\r\n    },\r\n    // todosRemoved: (todos, action) =>\r\n    //   todos.filter((todo) => todo.listId !== action.payload.id),\r\n  },\r\n  // todoFinished: (todos, action) => {\r\n  //   return todos.filter(todo => todo.check !== )\r\n  // }\r\n});\r\n\r\nexport const {\r\n  todoAdded,\r\n  todoEdited,\r\n  todoChecked,\r\n  todoRemoved,\r\n  todosThisListRemoved,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_ReactProjects\\todo-list\\src\\store\\rlists.js",["99","100","101"],"import {\r\n  createAction,\r\n  createReducer,\r\n  createSlice,\r\n  createStore,\r\n} from \"@reduxjs/toolkit\";\r\nimport { iniLists } from \"./ListInitialState\";\r\n\r\nconst slice = createSlice({\r\n  name: \"lists\",\r\n  initialState: iniLists,\r\n  reducers: {\r\n    listAdded: (lists, action) => {\r\n      // ^^^ cant use [todoAdded.type] like above because todoAdded is not an object anymore\r\n      // lists.push({\r\n      //   listInfo: action.payload.listInfo,\r\n      //   todos: action.payload.todos,\r\n      // });\r\n      lists.push({\r\n        id: action.payload.id,\r\n        title: action.payload.title,\r\n      });\r\n    },\r\n    listTitleEdited: (lists, action) => {\r\n      const index = lists.findIndex((list) => list.id === action.payload.id);\r\n      lists[index].title = action.payload.title;\r\n    },\r\n    currentListStatusSet: (lists, action) => {\r\n      const index = lists.findIndex((list) => list.id === action.payload.id);\r\n      lists[index].status = action.payload.status;\r\n      const indexReverseList = lists.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      indexReverseList.map((list) => (list.status = !action.payload.status));\r\n    },\r\n\r\n    allListStatusSet: (lists, action) => {\r\n      lists.map((list) => (list.status = action.payload.status));\r\n    },\r\n\r\n    listRemoved: (lists, action) => {\r\n      const index = lists.findIndex((list) => list.id === action.payload.id);\r\n      lists.splice(index, 1);\r\n    },\r\n    todosAssigned: (lists, action) => {\r\n      const index = lists.findIndex((list) => list.id === action.payload.id);\r\n      lists[index].todos = action.payload.todos;\r\n    },\r\n    // todoAdded: (lists, action) => {\r\n    //   // for (let i = 0; i < lists.length; i++) {\r\n    //   lists[2].todos.push({\r\n    //     id: action.payload.id,\r\n    //     content: action.payload.content,\r\n    //     check: action.payload.check,\r\n    //   });\r\n    //   // }\r\n    // },\r\n    // todoChecked: (lists, action) => {\r\n    //   let index;\r\n    //   for (let i = 0; i < lists.length; i++) {\r\n    //     if (lists[i].todos.id === action.payload.id) {\r\n    //       index = lists.indexOf(i.todos);\r\n    //       return i;\r\n    //     }\r\n    //     // lists[i].todos[index].check = !action.payload.check;\r\n\r\n    //     // lists[i].todos[index] = [];\r\n    //   }\r\n    // },\r\n    // todoRemoved: (lists, action) => {\r\n    //   // var indexX = { i, index };\r\n    //   // for (let i = 0; i < lists.length; i++) {\r\n    //   //   if ((lists[i].todos.id = action.payload.id)) {\r\n    //   //     index.push(i);\r\n    //   //     index.push(lists.indexOf(i.todos));\r\n    //   //   }\r\n    //   // }\r\n    //   // lists[indexX.i].todos.splice(indexX.index, 1);\r\n    //   let index;\r\n    //   for (let i = 0; i < lists.length; i++) {\r\n    //     if (lists[i].todos.id === action.payload.id) {\r\n    //       index = lists.indexOf(i.todos);\r\n    //       return i;\r\n    //     }\r\n    //     lists[0].todos.splice(i, 1);\r\n    //   }\r\n    // },\r\n  },\r\n});\r\nexport const {\r\n  listAdded,\r\n  listTitleEdited,\r\n  listRemoved,\r\n  todosAssigned,\r\n  currentListStatusSet,\r\n  allListStatusSet,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"111","line":32,"column":7,"nodeType":"108","messageId":"109","endLine":32,"endColumn":13},{"ruleId":"106","severity":1,"message":"112","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"113","line":16,"column":9,"nodeType":"108","messageId":"109","endLine":16,"endColumn":17},{"ruleId":"106","severity":1,"message":"114","line":4,"column":3,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"115","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":19},{"ruleId":"106","severity":1,"message":"116","line":8,"column":23,"nodeType":"108","messageId":"109","endLine":8,"endColumn":34},{"ruleId":"106","severity":1,"message":"116","line":1,"column":23,"nodeType":"108","messageId":"109","endLine":1,"endColumn":34},{"ruleId":"106","severity":1,"message":"112","line":8,"column":17,"nodeType":"108","messageId":"109","endLine":8,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"117","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":19},{"ruleId":"106","severity":1,"message":"118","line":15,"column":9,"nodeType":"108","messageId":"109","endLine":15,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":109,"column":10,"nodeType":"108","messageId":"109","endLine":109,"endColumn":23},{"ruleId":"106","severity":1,"message":"119","line":2,"column":3,"nodeType":"108","messageId":"109","endLine":2,"endColumn":15},{"ruleId":"106","severity":1,"message":"120","line":3,"column":3,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"121","line":5,"column":3,"nodeType":"108","messageId":"109","endLine":5,"endColumn":14},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'ItemList' is defined but never used.","Identifier","unusedVar","'current' is defined but never used.","'NavBar' is assigned a value but never used.","'useEffect' is defined but never used.","'clickNew' is assigned a value but never used.","'todosAssigned' is defined but never used.","'todoAdded' is defined but never used.","'useSelector' is defined but never used.","'listAdded' is defined but never used.","'lists' is assigned a value but never used.","'createAction' is defined but never used.","'createReducer' is defined but never used.","'createStore' is defined but never used.","no-global-assign","no-unsafe-negation"]